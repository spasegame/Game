import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.*;
import javax.imageio.*;
import java.io.*;
import java.awt.Image;
import java.awt.image.BufferedImage;

public class Spaceship
{
  private int health = 100;
//  private Weapon weapon = null;
  private int lives = 5;
  private boolean isAlive = true;
  private int x = 0;
  private int y = 0;
  private int xa = 0;
  private int ya = 0;
  private boolean isShooting = false;
//  private boolean hasMultiShot = false;
//  private boolean isImmune = false;
  BufferedImage img = null;
  BufferedImage image = null;
  ShotList shotlist = new ShotList();
  
  public Spaceship(int x, int y) {
    this.x = x;
    this.y = y;
    try {
      img = ImageIO.read(new File("Spaceship.png"));
    } catch (IOException e) {
    }
  }
  
  public void move()
  {
    //FIX END DISTANCES
    if (x + xa < 0)
      xa = 0;
    if (x + xa > 700)
      xa = 0;
    if (y + ya < 0)
      ya = 0;
    if (y + ya > 712)
      ya = 0;
    x = x + xa;
    y = y + ya;
    shotlist.move();
  }
  
  public void keyReleased(KeyEvent e) {
    if (e.getKeyCode() == KeyEvent.VK_LEFT) 
      xa = 0;
    if (e.getKeyCode() == KeyEvent.VK_RIGHT)
      xa = 0;
    if (e.getKeyCode() == KeyEvent.VK_UP)
      ya = 0; 
    if (e.getKeyCode() == KeyEvent.VK_DOWN) 
      ya = 0; 
    if (e.getKeyCode() == KeyEvent.VK_SPACE)
      isShooting = false;
  }
  
  public void keyPressed(KeyEvent e) { 
    if (e.getKeyCode() == KeyEvent.VK_LEFT) 
      xa = -2;
    if (e.getKeyCode() == KeyEvent.VK_RIGHT)
      xa = 2;
    if (e.getKeyCode() == KeyEvent.VK_UP)
      ya = -2; 
    if (e.getKeyCode() == KeyEvent.VK_DOWN) 
      ya = 2; 
    if (e.getKeyCode() == KeyEvent.VK_SPACE && !isShooting) {
      fire();
      isShooting = true;
    }
  }
  
  public void paint(Graphics g)
  {
    shotlist.paint(g);
    g.drawImage(img,x,y,null);
  }
  
  public void fire()
  {
    Shot shot = new Shot(x + 45,y);
    shotlist.addAtFront(shot);
  }
  
//  public void weaponFire(Weapon weapon)
//  {
//  }
  
  public void die()
  {
  }
  
  public void respawn()
  {
  }
}
